{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Option","Select","Variable","props","value","onChange","setValue","step","Operator","operators","map","operator","App","React","useState","x1","setX1","x2","setX2","x3","setX3","result","setResult","possibleOperators","operator1","setOperator1","operator2","setOperator2","operate","a","b","Math","log","reverse_right","reverse_left","className","size","align","direction","type","onClick","request","replace","first","answer","round","Modal","success","title","content","footer","warning","console","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.4d81e24a.chunk.js","sourcesContent":["import React from 'react';\nimport {Button, Modal, Select, InputNumber, Space} from 'antd';\nimport 'antd/dist/antd.css';\nimport './App.css';\n\nconst { Option } = Select;\n\nfunction Variable (props) {\n  const onChangeHandler = value => {\n    props.setValue(value);\n  };\n\n  return (\n    <InputNumber value={props.value} onChange={onChangeHandler} step=\"0.01\"/>\n  );\n}\n\nfunction Operator (props) {\n  const onChangeHandler = value => {\n    props.setValue(value);\n  };\n\n  return (\n    <Select onChange={onChangeHandler} value={props.value}>\n      {props.operators.map((operator) => <Option key={operator}>{operator}</Option>)}\n    </Select>\n  );\n}\n\n\nexport default function App () {\n  const [x1, setX1] = React.useState(1)\n  const [x2, setX2] = React.useState(2)\n  const [x3, setX3] = React.useState(3)\n  const [result, setResult] = React.useState(6)\n\n  const possibleOperators = ['+', '-', '/', '*', '%', '^', 'log']\n  const [operator1, setOperator1] = React.useState(possibleOperators[0])\n  const [operator2, setOperator2] = React.useState(possibleOperators[0])\n\n  const operate = (a, operator, b) => {\n    switch (operator) {\n      case '+':\n        return a + b\n      case '-':\n        return a - b\n      case '/':\n        return a / b\n      case '*':\n        return a * b\n      case '%':\n        return a / 100 * b\n      case '^':\n        return a ** b\n      case 'log':\n        return Math.log(b) / Math.log(a)\n    }\n  }\n\n  const reverse_right = (a, operator, b) => {\n    switch (operator) {\n      case '+':\n          return a - b\n        case '-':\n          return -1 * (a - b)\n        case '/':\n          return b / a\n        case '*':\n          return a / b\n        case '%':\n          return a / b * 100\n        case '^':\n          return Math.log(a) / Math.log(b)\n        case 'log':\n          return b ** a\n    }\n  }\n\n  const reverse_left = (a, operator, b) => {\n    switch (operator) {\n      case '+':\n        return a - b\n      case '-':\n        return a + b\n      case '/':\n        return a * b\n      case '*':\n        return a / b\n      case '%':\n        return a / b * 100\n      case '^':\n        return a ** (1 / b)\n      case 'log':\n        return b ** (1 / a)\n    }\n  }\n\n  const calculate = () => {\n    let request = `(${x1} ${operator1} ${x2}) ${operator2} ${x3} = ${result}`.replace('null', 'x')\n    let first = ''\n    let answer = ''\n\n    if (x1 !== null && x2 !== null && x3 !== null && result !== null) {\n      first = operate(x1, operator1, x2)\n      answer = Math.round(operate(first, operator2, x3) * 100) / 100\n\n      if (answer === result) {\n        Modal.success({\n          title: 'Успешное выполнение',\n          content: (\n            <div>\n              <p>Равенство соблюдается</p>\n              <p>Запрос: {request}</p>\n            </div>\n          ),\n          footer: (null),\n        });\n      } else {\n        Modal.warning({\n          title: 'Возникла проблема',\n          content: (\n            <div>\n              <p>Равенство не соблюдается</p>\n              <p>Запрос: {request}</p>\n            </div>\n          ),\n          footer: (null),\n        });\n      \n    }\n    return;\n    }\n\n    if (result === null) {\n      first = operate(x1, operator1, x2)\n      answer = operate(first, operator2, x3)\n    }\n\n    else if (x3 === null) {\n      first = operate(x1, operator1, x2)\n      answer = reverse_right(result, operator2, first)\n    }\n\n    else {\n      first = reverse_left(result, operator2, x3)\n      if (x2 === null) {\n        answer = reverse_right(first, operator1, x1)\n      } else {\n        answer = reverse_left(first, operator1, x2)\n      }\n    }\n\n    console.log(answer)\n    Modal.success({\n      title: 'Успешное выполнение',\n      content: (\n        <div>\n          <p>Запрос: {request}</p>\n          <p>Ответ: х = {Math.round(answer * 100) / 100}</p>\n        </div>\n      ),\n      footer: (null),\n    });\n\n  }\n\n  return (\n      <div className=\"centered background\">\n        <Space size={20} align='center' direction='vertical'>\n        <div align='center'>\n          <Space size={10}>\n            <Variable value={x1} setValue={setX1}/>\n            <Operator value={operator1} setValue={setOperator1} operators={possibleOperators}/>\n            <Variable value={x2} setValue={setX2}/>\n            <Operator value={operator2} setValue={setOperator2} operators={possibleOperators}/>\n            <Variable value={x3} setValue={setX3}/>\n            <span className='white_span'>=</span>\n            <Variable value={result} setValue={setResult}/>\n          </Space>\n        </div>\n        <div>\n          <Button type=\"default\" onClick={calculate}>Calculate</Button>\n        </div>\n        </Space>\n      </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  );\n  \n  reportWebVitals();\n"],"sourceRoot":""}